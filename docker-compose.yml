version: '3.8'

services:
  # RabbitMQ Service
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: notification-rabbitmq
    hostname: rabbitmq-server
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
      RABBITMQ_DEFAULT_VHOST: notification_vhost
    ports:
      - "5672:5672"     # RabbitMQ port
      - "15672:15672"   # Management UI port
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - notification_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Application Service
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: notification-app
    environment:
      NODE_ENV: production
      PORT: 5000
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672/notification_vhost
      ENTRADA_QUEUE_NAME: fila.notificacao.entrada.Anderson-Lima
      STATUS_QUEUE_NAME: fila.notificacao.status.Anderson-Lima
    ports:
      - "5000:5000"
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - notification_network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

networks:
  notification_network:
    driver: bridge

volumes:
  rabbitmq_data:
    driver: local